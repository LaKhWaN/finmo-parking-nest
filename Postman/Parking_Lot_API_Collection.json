{
	"info": {
		"_postman_id": "0e15c297-5e4f-43f5-b645-2bb12095fda2",
		"name": "Parking Lot API",
		"description": "## üìä **Parking Lot API Overview**\n\nThe **Parking Lot API** allows you to manage a parking lot system with functionalities to initialize, expand, park, exit, and query parking slots. This API supports CRUD operations to effectively manage cars and slots in the parking lot.\n\n### ‚úÖ **Key Features:**\n\n- **Initialize** and **expand** parking slots dynamically.\n    \n- **Park** cars with registration numbers and colors.\n    \n- **Exit** cars from specific slots.\n    \n- **Fetch occupied slots**, registrations by color, and slot numbers by registration.\n    \n- **Search** slots based on car color or registration number.\n    \n\n### üìÅ **Base URL:**\n\nUse the variable `{{base_url}}` for flexibility.\n\n- **Example Local:** `http://localhost`\n    \n- **Example Deployed:** `https://yourdomain.com`\n    \n\n### üõ†Ô∏è **Endpoints:**\n\n| **Method** | **Endpoint** | **Description** |\n| --- | --- | --- |\n| `POST` | `/parking/init/{size}` | Initialize parking lot with given slots |\n| `POST` | `/parking/expand/{slots}` | Add more slots to the parking lot |\n| `POST` | `/parking/park` | Park a car in the lot |\n| `POST` | `/parking/exit/{slot_number}` | Exit car from a slot |\n| `GET` | `/parking/occupied` | View all occupied slots |\n| `GET` | `/parking/registration/{color}` | Get car registrations by color |\n| `GET` | `/parking/slot/{registration_number}` | Get slot number by car registration |\n| `GET` | `/parking/slots/{color}` | Get all slots occupied by a color |\n\n### ‚ö° **Edge Cases to Test:**\n\n- Parking a car when the lot is full.\n    \n- Exiting a car from an empty or invalid slot.\n    \n- Searching for non-existent car colors or registration numbers.\n    \n\n### üí° **Tips:**\n\n- Ensure `{{base_url}}` is correctly set in your environment before making requests.\n    \n- Test edge cases to validate error handling.\n    \n- Expand parking slots if you encounter a **\"Parking Full\"** response.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34287110",
		"_collection_link": "https://finmo-parking.postman.co/workspace/Finmo-Parking-Workspace~ece1f1d4-8cea-49fa-8a18-66d72b120f52/collection/34287110-0e15c297-5e4f-43f5-b645-2bb12095fda2?action=share&source=collection_link&creator=34287110"
	},
	"item": [
		{
			"name": "Initialize Parking Lot",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/parking/init/5",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"parking",
						"init",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "Expand Parking Lot",
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/parking/expand/3",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"parking",
						"expand",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Park Car",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \"registrationNumber\": \"KA-01-HH-7848\", \"color\": \"White\" }"
				},
				"url": {
					"raw": "http://{{base_url}}/parking/park",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"parking",
						"park"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edge Case - Park Car when Full",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \"registrationNumber\": \"KA-01-HH-9999\", \"color\": \"Yellow\" }"
				},
				"url": {
					"raw": "http://{{base_url}}/parking/park",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"parking",
						"park"
					]
				}
			},
			"response": []
		},
		{
			"name": "Exit Car",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/parking/exit/1",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"parking",
						"exit",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edge Case - Exit from Empty Slot",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/parking/exit/10",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"parking",
						"exit",
						"10"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Occupied Slots",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/parking/occupied",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"parking",
						"occupied"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Registrations by Color",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/parking/registration/White",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"parking",
						"registration",
						"White"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edge Case - Get Registrations for Non-Existent Color",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/parking/registration/Purple",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"parking",
						"registration",
						"Purple"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Slot by Registration Number",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/parking/slot/KA-01-HH-9999",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"parking",
						"slot",
						"KA-01-HH-9999"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edge Case - Get Slot for Non-Existent Registration",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/parking/slot/KA-99-XX-0000",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"parking",
						"slot",
						"KA-99-XX-0000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Slots by Car Color",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/parking/slots/White",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"parking",
						"slots",
						"White"
					]
				}
			},
			"response": []
		},
		{
			"name": "Clear Parking",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/parking/clear",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"parking",
						"clear"
					]
				}
			},
			"response": []
		},
		{
			"name": "Parking Status",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/parking/status",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"parking",
						"status"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Tickets",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/parking/tickets",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"parking",
						"tickets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Ticket By Id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/parking/ticket/2d3ee5f3-fd97-4688-ba08-f18447dc5421",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"parking",
						"ticket",
						"2d3ee5f3-fd97-4688-ba08-f18447dc5421"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Active Tickets",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/parking/tickets/active",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"parking",
						"tickets",
						"active"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Closed Tickets",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{base_url}}/parking/tickets/closed",
					"protocol": "http",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"parking",
						"tickets",
						"closed"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "finmo-parking-nest.onrender.com",
			"type": "string"
		}
	]
}